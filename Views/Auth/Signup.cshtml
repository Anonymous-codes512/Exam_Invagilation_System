@{
	Layout = null;
}
<!DOCTYPE html>
<html lang="en">
<head>
	<meta charset="UTF-8" />
	<meta http-equiv="X-UA-Compatible" content="IE=edge" />
	<meta name="viewport" content="width=device-width, initial-scale=1.0" />
	<title>Signup Page - Exam_Invagilation_System</title>
	<link rel="icon" type="image/x-icon" href="~/favicon.ico" asp-append-version="true" />
	<!-- CSS -->
	<link rel="stylesheet" href="~/css/_Notification.css" asp-append-version="true" />
	<link rel="stylesheet" href="~/css/auth.css" asp-append-version="true" />
	<!-- Boxicons CSS -->
	<link href="https://unpkg.com/boxicons@2.1.2/css/boxicons.min.css" rel="stylesheet" />

	
</head>
<body>
	<div class="container">
		@if (TempData["success"] != null || TempData["error"] != null)
		{
			<div class="notification-container">
				<div class="notification @(TempData["success"] != null ? "notification--success" : "notification--error")">
					<div class="notification_body">
						<i class='bx @(TempData["success"] != null ? "bx-check-circle" : "bx-x-circle")'></i>
						@TempData["success"]
						@TempData["error"]
					</div>
					<div class="notification_progress"></div>
				</div>
			</div>
		}
		<header>Signup</header>
		<form method="post" asp-action="Signup" class="form" onsubmit="return showLoader('add')">
			<div class="field">
				<div class="input-field">
					<input type="text" placeholder="Enter your name" class="name" name="name" />
				</div>
			</div>

			<div class="field email-field">
				<div class="input-field">
					<input type="email" placeholder="Enter your email" class="email" name="email" />
				</div>
				<span class="error email-error">
					<i class="bx bx-error-circle error-icon"></i>
					<p class="error-text">Please enter a valid email</p>
				</span>
			</div>

			<div class="field create-password">
				<div class="input-field">
					<input type="password" 
						name="password"
						   placeholder="Create password"
						   class="password" />
					<i class="bx bx-hide show-hide"></i>
				</div>
				<span class="error password-error">
					<i class="bx bx-error-circle error-icon"></i>
					<p class="error-text">
						Please enter atleast 8 charatcer with number, symbol, small and
						capital letter.
					</p>
				</span>
			</div>
			<div class="field confirm-password">
				<div class="input-field">
					<input type="password"
						   placeholder="Confirm password"
						   class="cPassword" />
					<i class="bx bx-hide show-hide"></i>
				</div>
				<span class="error cPassword-error">
					<i class="bx bx-error-circle error-icon"></i>
					<p class="error-text">Password don't match</p>
				</span>
			</div>

			<div class="input-field button">
				<input type="submit" value="Signup" />
			</div>

			<span class="dont-have-account">Already have an account. &nbsp;<a asp-controller="Auth" asp-action="Login">Login</a></span>

		</form>
	</div>

	<script>
		const form = document.querySelector("form");
		const emailField = form.querySelector(".email-field");
		const emailInput = emailField.querySelector(".email");
		const passField = form.querySelector(".create-password");
		const passInput = passField.querySelector(".password");
		const cPassField = form.querySelector(".confirm-password");
		const cPassInput = cPassField.querySelector(".cPassword");

		function checkEmail() {
			const emaiPattern = /^[^ ]+[^ ]+\.[a-z]{2,3}$/;
			if (!emailInput.value.match(emaiPattern)) {
				return emailField.classList.add("invalid");
			}
			emailField.classList.remove("invalid");
		}

		const eyeIcons = document.querySelectorAll(".show-hide");
		eyeIcons.forEach((eyeIcon) => {
			eyeIcon.addEventListener("click", () => {
				const pInput = eyeIcon.parentElement.querySelector("input");
				if (pInput.type === "password") {
					eyeIcon.classList.replace("bx-hide", "bx-show");
					return (pInput.type = "text");
				}
				eyeIcon.classList.replace("bx-show", "bx-hide");
				pInput.type = "password";
			});
		});

		function createPass() {
			const passPattern = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\d)(?=.*[$!%*?&])[A-Za-z\d$!%*?&]{8,}$/;
			if (!passInput.value.match(passPattern)) {
				return passField.classList.add("invalid");
			}
			passField.classList.remove("invalid");
		}

		function confirmPass() {
			if (passInput.value !== cPassInput.value || cPassInput.value === "") {
				return cPassField.classList.add("invalid");
			}
			cPassField.classList.remove("invalid");
		}

		form.addEventListener("submit", (e) => {
			checkEmail();
			createPass();
			confirmPass();

			if (emailField.classList.contains("invalid") ||
				passField.classList.contains("invalid") ||
				cPassField.classList.contains("invalid")) {
				e.preventDefault(); // ❌ Block only if validation fails
			}
		});


			function showLoader(action) {
			let button, loader, buttonText;

			if (action === 'add') {
				button = document.getElementById("addBtn");
				loader = document.getElementById("addLoader");
				buttonText = document.getElementById("addBtnText");
			}

			loader.classList.remove("d-none");
			buttonText.textContent = action === 'delete' ? "Deleting..."
				: action === 'edit' ? "Updating..."
				: action === 'addExcel' ? "Uploading..."
				: "Adding...";
			button.disabled = true;

			return true; // Allow form submission
		}
	</script>
</body>
</html>